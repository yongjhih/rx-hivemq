buildscript {
    ext.kotlin_version = '1.1.1'
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4'
    }
}

apply plugin: 'java'
apply plugin: "kotlin"
apply plugin: 'org.junit.platform.gradle.plugin'

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

repositories {
    jcenter()
    maven { url "http://dl.bintray.com/jetbrains/spek" }
}

dependencies {
    compile 'com.hivemq:hivemq-spi:3.1.0'

    compile  'io.reactivex.rxjava2:rxjava:2.0.8'
    compile  'net.javacrumbs.future-converter:future-converter-guava-rxjava2:1.1.0'
    //compile 'com.google.guava:guava:22.0'
    compile 'com.google.inject:guice:4.1.0'
    //compile 'ch.qos.logback:logback-classic:+'
    //compile 'ch.qos.logback:logback-core:+'
    //compile 'javax.ws.rs:javax.ws.rs-api:+'
    //compile 'javax.servlet:javax.servlet-api:+'
    //compile 'javax.servlet:javax.javax-servlet-api:+'

    testCompile 'junit:junit:4.12'
    testCompile 'org.jetbrains.spek:spek-api:1.1.2'
    testCompile 'org.junit.platform:junit-platform-runner:1.0.0-M4'
    //testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testRuntime 'org.jetbrains.spek:spek-junit-platform-engine:1.1.2'
    testCompile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-runtime:$kotlin_version"
    //compile 'org.jetbrains.kotlin:kotlin-stdlib'
    //compile 'org.jetbrains.kotlin:kotlin-reflect'

    testCompile 'org.mockito:mockito-core:2.2.9'
    testCompile "com.nhaarman:mockito-kotlin:1.5.0"
    testCompile 'org.assertj:assertj-core:2.5.0'
    //testCompile 'org.assertj:assertj-guava:2.5.0'
}

tasks.withType(Test) {
  testLogging {
    exceptionFormat "full"
    events "passed", "skipped", "failed", "standardOut", "standardError"
    showStandardStreams = true
  }
}

apply from: 'javadoc.gradle'
apply from: 'jacoco.gradle'
